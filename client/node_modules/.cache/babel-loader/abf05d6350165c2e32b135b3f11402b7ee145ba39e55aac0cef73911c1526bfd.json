{"ast":null,"code":"var _jsxFileName = \"/Users/falcacer/Workspace/Proyectos/playroom/SzicomProject/client/src/pages/Questions.tsx\",\n  _s = $RefreshSig$();\nimport QuestionsList from \"../Components/QuestionsList\";\nimport { useLoaderData } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Questions() {\n  _s();\n  const data = useLoaderData();\n  const questions = data.questions;\n  console.log(questions);\n  if (questions.isError) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: questions.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(QuestionsList, {\n      events: questions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Questions, \"QW7mxNe2nP0ZaYH+xOMoBrHrRqc=\", false, function () {\n  return [useLoaderData];\n});\n_c = Questions;\nexport default Questions;\nexport async function loader() {\n  const response = await fetch(\"http://localhost:8080/questions\");\n  if (!response.ok) {\n    return {\n      isError: true,\n      message: \"Could not fetch questions.\"\n    };\n  } else {\n    const resData = await response.json();\n    return resData.questions;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"names":["QuestionsList","useLoaderData","jsxDEV","_jsxDEV","Fragment","_Fragment","Questions","_s","data","questions","console","log","isError","children","message","fileName","_jsxFileName","lineNumber","columnNumber","events","_c","loader","response","fetch","ok","resData","json","$RefreshReg$"],"sources":["/Users/falcacer/Workspace/Proyectos/playroom/SzicomProject/client/src/pages/Questions.tsx"],"sourcesContent":["import QuestionsList from \"../Components/QuestionsList\";\nimport { useLoaderData } from \"react-router-dom\";\n\nfunction Questions() {\n  const data : any = useLoaderData();\n  const questions = data.questions\n  console.log(questions)\n\n  if (questions.isError) {\n    return <p>{questions.message}</p>;\n  }\n\n  return (\n    <>\n      <QuestionsList events={questions} />\n    </>\n  );\n}\n\nexport default Questions;\n\nexport async function loader() {\n  const response = await fetch(\"http://localhost:8080/questions\");\n\n  if (!response.ok) {\n    return { isError: true, message: \"Could not fetch questions.\" };\n  } else {\n    const resData = await response.json();\n    return resData.questions;\n  }\n}\n"],"mappings":";;AAAA,OAAOA,aAAa,MAAM,6BAA6B;AACvD,SAASC,aAAa,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEjD,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAMC,IAAU,GAAGP,aAAa,CAAC,CAAC;EAClC,MAAMQ,SAAS,GAAGD,IAAI,CAACC,SAAS;EAChCC,OAAO,CAACC,GAAG,CAACF,SAAS,CAAC;EAEtB,IAAIA,SAAS,CAACG,OAAO,EAAE;IACrB,oBAAOT,OAAA;MAAAU,QAAA,EAAIJ,SAAS,CAACK;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EACnC;EAEA,oBACEf,OAAA,CAAAE,SAAA;IAAAQ,QAAA,eACEV,OAAA,CAACH,aAAa;MAACmB,MAAM,EAAEV;IAAU;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBACpC,CAAC;AAEP;AAACX,EAAA,CAdQD,SAAS;EAAA,QACGL,aAAa;AAAA;AAAAmB,EAAA,GADzBd,SAAS;AAgBlB,eAAeA,SAAS;AAExB,OAAO,eAAee,MAAMA,CAAA,EAAG;EAC7B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,CAAC;EAE/D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB,OAAO;MAAEZ,OAAO,EAAE,IAAI;MAAEE,OAAO,EAAE;IAA6B,CAAC;EACjE,CAAC,MAAM;IACL,MAAMW,OAAO,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;IACrC,OAAOD,OAAO,CAAChB,SAAS;EAC1B;AACF;AAAC,IAAAW,EAAA;AAAAO,YAAA,CAAAP,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}