{"ast":null,"code":"var _jsxFileName = \"/Users/falcacer/Workspace/Proyectos/playroom/SzicomProject/client/src/pages/QuestionDetails.tsx\",\n  _s = $RefreshSig$();\nimport QuestionItem from \"../Components/QuestionItem\";\nimport { json, useLoaderData } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuestionDetails = () => {\n  _s();\n  const data = useLoaderData();\n  const question = data[0];\n  const answers = data[1];\n  return (\n    /*#__PURE__*/\n    // <div>\n    //   <QuestionItem event={question} />\n    //   <ul></ul>\n    // <div/>\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(QuestionItem, {\n        event: question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: answers.map(answer => {\n          /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: answer.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 13\n            }, this)\n          }, answer.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 11\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(QuestionDetails, \"v5hK2q5+812nORSCtfM3AShO9pc=\", false, function () {\n  return [useLoaderData];\n});\n_c = QuestionDetails;\nexport default QuestionDetails;\nexport async function loader(_ref) {\n  let {\n    req,\n    params\n  } = _ref;\n  const id = params.questionId;\n  const response = await fetch(`http://localhost:8080/questions/${id}`);\n  if (!response.ok) {\n    throw json({\n      message: \"Could not fetch answers for selected question.\"\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"QuestionDetails\");","map":{"version":3,"names":["QuestionItem","json","useLoaderData","jsxDEV","_jsxDEV","QuestionDetails","_s","data","question","answers","children","event","fileName","_jsxFileName","lineNumber","columnNumber","map","answer","content","id","_c","loader","_ref","req","params","questionId","response","fetch","ok","message","status","$RefreshReg$"],"sources":["/Users/falcacer/Workspace/Proyectos/playroom/SzicomProject/client/src/pages/QuestionDetails.tsx"],"sourcesContent":["import AnswersList from \"../Components/AnswersList\";\nimport QuestionItem from \"../Components/QuestionItem\";\nimport { json, useLoaderData } from \"react-router-dom\";\n\ntype Answer = {\n  id: string;\n  question: string;\n  user: string;\n  content: string;\n  created: string;\n};\n\nconst QuestionDetails = () => {\n  const data: any = useLoaderData();\n  const question = data[0];\n  const answers = data[1];\n\n  return (\n    // <div>\n    //   <QuestionItem event={question} />\n    //   <ul></ul>\n    // <div/>\n    <div>\n      <QuestionItem event={question} />\n      <ul>\n        {answers.map((answer : Answer) => {\n          <li key={answer.id}>\n            <p>{answer.content}</p>\n          </li>;\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default QuestionDetails;\n\nexport async function loader({ req, params }: any) {\n  const id = params.questionId;\n\n  const response = await fetch(`http://localhost:8080/questions/${id}`);\n\n  if (!response.ok) {\n    throw json(\n      { message: \"Could not fetch answers for selected question.\" },\n      { status: 500 }\n    );\n  } else {\n    return response;\n  }\n}\n"],"mappings":";;AACA,OAAOA,YAAY,MAAM,4BAA4B;AACrD,SAASC,IAAI,EAAEC,aAAa,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAUvD,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAMC,IAAS,GAAGL,aAAa,CAAC,CAAC;EACjC,MAAMM,QAAQ,GAAGD,IAAI,CAAC,CAAC,CAAC;EACxB,MAAME,OAAO,GAAGF,IAAI,CAAC,CAAC,CAAC;EAEvB;IAAA;IACE;IACA;IACA;IACA;IACAH,OAAA;MAAAM,QAAA,gBACEN,OAAA,CAACJ,YAAY;QAACW,KAAK,EAAEH;MAAS;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACjCX,OAAA;QAAAM,QAAA,EACGD,OAAO,CAACO,GAAG,CAAEC,MAAe,IAAK;UAChC,aAAAb,OAAA;YAAAM,QAAA,eACEN,OAAA;cAAAM,QAAA,EAAIO,MAAM,CAACC;YAAO;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI;UAAC,GADhBE,MAAM,CAACE,EAAE;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEd,CAAC;QACP,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC;AAEV,CAAC;AAACT,EAAA,CArBID,eAAe;EAAA,QACDH,aAAa;AAAA;AAAAkB,EAAA,GAD3Bf,eAAe;AAuBrB,eAAeA,eAAe;AAE9B,OAAO,eAAegB,MAAMA,CAAAC,IAAA,EAAuB;EAAA,IAAtB;IAAEC,GAAG;IAAEC;EAAY,CAAC,GAAAF,IAAA;EAC/C,MAAMH,EAAE,GAAGK,MAAM,CAACC,UAAU;EAE5B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,mCAAkCR,EAAG,EAAC,CAAC;EAErE,IAAI,CAACO,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM3B,IAAI,CACR;MAAE4B,OAAO,EAAE;IAAiD,CAAC,EAC7D;MAAEC,MAAM,EAAE;IAAI,CAChB,CAAC;EACH,CAAC,MAAM;IACL,OAAOJ,QAAQ;EACjB;AACF;AAAC,IAAAN,EAAA;AAAAW,YAAA,CAAAX,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}