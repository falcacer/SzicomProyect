{"ast":null,"code":"var _jsxFileName = \"/Users/falcacer/Workspace/Proyectos/playroom/SzicomProject/client/src/pages/NewQuestion.tsx\";\nimport QuestionForm from \"../Components/Questions/QuestionForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewQuestion = () => {\n  const questionNull = {\n    title: \"\",\n    content: \"\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(QuestionForm, {\n      method: \"post\",\n      question: questionNull\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n_c = NewQuestion;\nexport default NewQuestion;\n\n// export async function action({ request, params }: any) {\n//   const data = await request.formData();\n//   const token = getAuthToken();\n//   const user = getUserFromToken(token);\n\n//   const questionData = {\n//     title: data.get(\"title\"),\n//     content: data.get(\"content\"),\n//     user\n//   };\n\n//   const response = await fetch(\"http://localhost:8080/questions\", {\n//     method: \"POST\",\n//     headers: {\n//       \"Content-Type\": \"application/json\",\n//     },\n//     body: JSON.stringify(questionData),\n//   });\n\n//   if (!response.ok) {\n//     throw json({ message: \"Something went wrong!.\" }, { status: 500 });\n//   }\n\n//   return redirect(\"/questions\");\n// }\nvar _c;\n$RefreshReg$(_c, \"NewQuestion\");","map":{"version":3,"names":["QuestionForm","jsxDEV","_jsxDEV","NewQuestion","questionNull","title","content","children","method","question","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/falcacer/Workspace/Proyectos/playroom/SzicomProject/client/src/pages/NewQuestion.tsx"],"sourcesContent":["import QuestionForm from \"../Components/Questions/QuestionForm\";\n\nconst NewQuestion = () => {\n  const questionNull = {\n    title: \"\",\n    content: \"\",\n  };\n  return (\n    <div>\n      <QuestionForm method={\"post\"} question={questionNull} />\n    </div>\n  );\n};\n\nexport default NewQuestion;\n\n// export async function action({ request, params }: any) {\n//   const data = await request.formData();\n//   const token = getAuthToken();\n//   const user = getUserFromToken(token);\n\n//   const questionData = {\n//     title: data.get(\"title\"),\n//     content: data.get(\"content\"),\n//     user\n//   };\n\n//   const response = await fetch(\"http://localhost:8080/questions\", {\n//     method: \"POST\",\n//     headers: {\n//       \"Content-Type\": \"application/json\",\n//     },\n//     body: JSON.stringify(questionData),\n//   });\n\n//   if (!response.ok) {\n//     throw json({ message: \"Something went wrong!.\" }, { status: 500 });\n//   }\n\n//   return redirect(\"/questions\");\n// }\n"],"mappings":";AAAA,OAAOA,YAAY,MAAM,sCAAsC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,MAAMC,WAAW,GAAGA,CAAA,KAAM;EACxB,MAAMC,YAAY,GAAG;IACnBC,KAAK,EAAE,EAAE;IACTC,OAAO,EAAE;EACX,CAAC;EACD,oBACEJ,OAAA;IAAAK,QAAA,eACEL,OAAA,CAACF,YAAY;MAACQ,MAAM,EAAE,MAAO;MAACC,QAAQ,EAAEL;IAAa;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrD,CAAC;AAEV,CAAC;AAACC,EAAA,GAVIX,WAAW;AAYjB,eAAeA,WAAW;;AAE1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}